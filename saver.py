from telethon import TelegramClient, events

# –ù–∏–∂–µ –≤–≤–æ–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å my.telegram.org
api_id = api_id
api_hash = 'api_hash'

client = TelegramClient('picsaver', api_id, api_hash)

@client.on(events.NewMessage)
async def handle_new_message(event):
    message = event.message
    if (
        getattr(message, 'media', False)
        and getattr(message.media, 'ttl_seconds', False)
        and not message.out
    ):
        media = await client.download_media(message.media)
        user_id = message.sender_id
        user_link = f'tg://user?id={user_id}'
        await client.send_file(
            'me',
            media,
            caption=f'üî•[{message.sender.first_name}]({user_link}) –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–µ–µ—Å—è –º–µ–¥–∏–∞',
        )

@client.on(events.NewMessage(pattern='.–±–ª—è')) # –ó–¥–µ—Å—å –º–æ–∂–µ—Ç–µ —Å–º–µ–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
async def handle_save_command(event):
    message = event.message
    reply = await message.get_reply_message()
    if (
        reply
        and getattr(reply, 'media', False)
        and getattr(reply.media, 'ttl_seconds', False)
    ):
        await message.delete()
        media = await client.download_media(reply.media)
        user_id = reply.sender_id
        user_link = f'tg://user?id={user_id}'
        await client.send_file(
            'me',
            media,
            caption=f'üî•[{reply.sender.first_name}]({user_link}) –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–µ–µ—Å—è –º–µ–¥–∏–∞',
        )

async def main():
    await client.start()
    await client.get_dialogs()
    await client.run_until_disconnected()

with client:
    client.loop.run_until_complete(main())
